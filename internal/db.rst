数据库 —— db
=================

数据库也是一个字典，
对数据库的操作大部分也是构建在字典操作之上。

添加一个 key-value 对到数据库，
就是将 key 对象和 value 对象保存到数据库字典上。

删除/查找/更新等操作都是基于对字典结构的处理上的。


key space 空间的管理
-------------------------

数据库的 key space ，
以及 key 的过期时间都分别使用一个字典来保存，
``redis.c/tryResizeHashTable`` 会在 Redis Cron 执行期间运行，
对这两个字典的大小进行检查，
当这两个字典的使用比率低于 ``redis.h/REDIS_HT_MINFILL`` 时（默认值为 10%），
将这两个字典的已有节点数/可用节点数的比率缩小到 >= 1:1 ，
从而节约空间。

Redis Cron 还会调用 ``redis.c/incrementallyRehash`` ，
让有需要的 key space 进行渐进式 rehash ，扩展 key space 的空间。


数据库的切换
----------------

一个 Redis 服务器可以有多个数据库，
每个客户端有一个记录当前所使用数据库的 id （一个整数），
可以通过修改这个 id 来达到切换到不同数据库的目的。


过期 key 的判定
-----------------

每个数据库都使用一个字典来保存 key 的过期时间。

当取出 key 时，
将它的过期时间和当前时间对比，
如果当前时间比过期时间大的话，
那么 key 过期。


key 的过期删除
----------------

惰性删除。

比如在取出 key 时，
会对 key 进行检查，
如果 key 已过期，
就返回 NULL ，
否则，
就返回值对象。


事务的CAS
---------------

每次 key 被修改之后（设置、更新、删除，等等）
都会调用 ``signalModifiedKey`` 函数，
通知所有监视 key 的客户端，
这个 key 已经被修改。


TODO
-------

还有部分和 AOF 、 REPLICATION 有关的函数未注释，
函数的时间复杂度未添加。

