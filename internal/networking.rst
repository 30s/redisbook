服务端的连接和处理 —— networking
====================================

1. 客户端的创建、释放，以及命令参数的清理和执行？

2. 发送回复的方式（添加到缓存，列表，然后由写事件写入到客户端）

3. 回复协议（说说客户端？）


客户端
----------

两个地方保存了回复，
如果缓冲区有空间就将回复优先追加到缓冲区，
否则将回复添加到列表尾部。


缓冲区
---------------

``char buf[REDIS_REPLY_CHUNK_BYTES]`` 保存内容，
``int bufpos`` 保存当前字符串写入的偏移量。


回复列表
-------------

``list *reply`` 一个 FIFO 链表，
每个链表节点中保存一个字符串，
每个字符串保存任意多个总长度 ``<= REDIS_REPLY_CHUNK_BYTES`` 的回复，
每个字符串以 FIFO 的顺序排列。


写回复
--------

写回复由写事件执行，
一个回复会被事件处理器分多次写入（避免独占服务器）。

写回复将缓冲区以及回复列表中的所有内容以 FIFO 的顺序发送给客户端。
